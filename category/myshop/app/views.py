from django.shortcuts import render, redirect, get_object_or_404
from django.contrib import messages
from .models import Category, Product
from .forms import CategoryForm, ProductForm

# üè† Trang Ch·ªß
def home_view(request):
    categories = Category.objects.all()
    return render(request, 'app/base.html', {'categories': categories})

# Danh s√°ch danh m·ª•c
def category_list(request):
    categories = Category.objects.all()
    return render(request, 'app/category_list.html', {'categories': categories})

# Th√™m danh m·ª•c
def add_category(request):
    if request.method == "POST":
        form = CategoryForm(request.POST)
        if form.is_valid():
            form.save()
            messages.success(request, "Danh m·ª•c ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng!")
            return redirect('category_list')
    else:
        form = CategoryForm()
    return render(request, 'app/add_category.html', {'form': form})

# C·∫≠p nh·∫≠t danh m·ª•c
def update_category(request, category_id):
    category = get_object_or_404(Category, id=category_id)
    if request.method == "POST":
        form = CategoryForm(request.POST, instance=category)
        if form.is_valid():
            form.save()
            messages.success(request, "C·∫≠p nh·∫≠t danh m·ª•c th√†nh c√¥ng!")
            return redirect('category_list')
    else:
        form = CategoryForm(instance=category)
    return render(request, 'app/update_category.html', {'form': form})

# X√≥a danh m·ª•c
def delete_category(request, category_id):
    category = get_object_or_404(Category, id=category_id)
    if request.method == "POST":
        category.delete()
        messages.success(request, "üóëÔ∏è Danh m·ª•c ƒë√£ b·ªã x√≥a!")
        return redirect('category_list')
    return render(request, 'app/delete_category.html', {'category': category})

# Danh s√°ch s·∫£n ph·∫©m
def product_list(request):
    products = Product.objects.all().order_by('-created_at')
    return render(request, 'app/product_list.html', {'products': products})

#  Th√™m s·∫£n ph·∫©m
def add_product(request):
    if request.method == "POST":
        form = ProductForm(request.POST, request.FILES)
        if form.is_valid():
            form.save()
            messages.success(request, " S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng!")
            return redirect('product_list')
    else:
        form = ProductForm()
    return render(request, 'app/add_product.html', {'form': form})

# C·∫≠p nh·∫≠t s·∫£n ph·∫©m
def update_product(request, product_id):
    product = get_object_or_404(Product, id=product_id)
    if request.method == "POST":
        form = ProductForm(request.POST, request.FILES, instance=product)
        if form.is_valid():
            form.save()
            messages.success(request, " C·∫≠p nh·∫≠t s·∫£n ph·∫©m th√†nh c√¥ng!")
            return redirect('product_list')
    else:
        form = ProductForm(instance=product)
    return render(request, 'app/update_product.html', {'form': form})

#  X√≥a s·∫£n ph·∫©m
def delete_product(request, product_id):
    product = get_object_or_404(Product, id=product_id)
    if request.method == "POST":
        product.delete()
        messages.success(request, " X√≥a s·∫£n ph·∫©m th√†nh c√¥ng!")
        return redirect('product_list')
    return render(request, 'app/delete_product.html', {'product': product})
